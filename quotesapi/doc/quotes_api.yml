---
openapi: 3.0.3
servers:
- url: /api
components:
  schemas:
    Creature:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        name:
          description: "Creature's unique name"
          type: string
        age:
          description: "Age of the creature"
          type: integer
        picture:
          description: "ASCII picture of the creature"
          type: string
        type:
          description: "Type of the creature"
          type: string
        special_force:
          description: "Special force of the creature"
          type: string
    Human:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        name:
          description: "Human's unique name"
          type: string
        age:
          description: "Age of the human"
          type: integer
        picture:
          description: "ASCII picture of the human"
          type: string
        relation:
          description: "What relation does the human have, e.g. sister"
          type: string
        hobby:
          description: "The human's hobby"
          type: string
    Animal:
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        name:
          description: "Animal's unique name"
          type: string
        age:
          description: "Age of the animal"
          type: integer
        picture:
          description: "ASCII picture of the animal"
          type: string
        species:
          description: "Species of the animal"
          type: string
        environment:
          description: "Environment where the animal lives"
          type: string

info:
  title: Quotes api
  version: 0.0.1
  description: |
    An API where user can create unique characters and add quotes for them.
  termsOfService: http://totally.not.placehold.er/
  contact:
    url: http://totally.not.placehold.er/
    email: example@email.com
    name: Someone
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  # CREATURE COLLECTION ----------------------------------------------------------------------------
  /creatures/:
    get:
      description: Get the list of creatures
      responses:
        '200':
          description: List of creatures
          content:
            application/json:
              example:
                - name: "Drako"
                  age: 150
                  picture: "ASCII dragon"
                  type: "Dragon"
                  special_force: "Fire breath"

                - name: "Zypher"
                  age: 300
                  picture: "ASCII ghost"
                  type: "Ghost"
                  special_force: "Invisibility"
    post:
      description: Create a new creature
      requestBody:
        description: JSON document that contains data for new creature
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creature'
            example:
              name: "Drako"
              age: 150
              picture: "ASCII dragon"
              type: "Dragon"
              special_force: "Fire breath"
      responses:
        '201':
          description: The creature was created successfully
          headers:
            Location: 
              description: URI of the new creature
              schema: 
                type: string
        '400':
          description: The request body was not valid
        '409':
          description: A creature with the same handle already exists
        '415':
          description: Wrong media type was used
  
  # CREATURE ITEM
  /creatures/{name}:
    get:
      description: Retrieve details of a specific creature
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the creature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creature'
        '404':
          description: Creature not found
    put:
      description: Update an existing creature
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: JSON document that contains updated data for the creature
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creature'
      responses:
        '204':
          description: Creature updated successfully
        '400':
          description: Cannot change primary key
        '409':
          description: Creature with the new name already exists
        '415':
          description: Unsupported media type
    delete:
      description: Delete an creature from the database
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Creature deleted successfully
        '404':
          description: Creature not found      

  # HUMAN COLLECTION -----------------------------------------------------------------------
  /humans/:
    get:
      description: Get the list of humans
      responses:
        '200':
          description: List of humans
          content:
            application/json:
              example:
                - name: "Marie"
                  age: 29
                  picture: "ASCII human"
                  relation: "Aunt"
                  hobby: "Gardening"

                - name: "Dave"
                  age: 45
                  picture: "ASCII human"
                  relation: "Dad"
                  hobby: "Building legos"
    post:
      description: Create a new human
      requestBody:
        description: JSON document that contains data for new human
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Human'
            example:
              name: "Marie"
              age: 29
              picture: "ASCII human"
              relation: "Aunt"
              hobby: "Gardening"
      responses:
        '201':
          description: The human was created successfully
          headers:
            Location: 
              description: URI of the new human
              schema: 
                type: string
        '400':
          description: The request body was not valid
        '409':
          description: A human with the same handle already exists
        '415':
          description: Wrong media type was used

  # HUMAN ITEM
  /humans/{name}:
    get:
      description: Retrieve details of a specific human
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the human
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
        '404':
          description: Human not found
    put:
      description: Update an existing human
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: JSON document that contains updated data for the human
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Human'
      responses:
        '204':
          description: Human updated successfully
        '400':
          description: Cannot change primary key
        '409':
          description: Human with the new name already exists
        '415':
          description: Unsupported media type
    delete:
      description: Delete an human from the database
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Human deleted successfully
        '404':
          description: Human not found      
  
  # ANIMAL COLLECTION ------------------------------------------------------------------ 
  /animals/:
    get:
      description: Get the list of animals
      responses:
        '200':
          description: List of animals
          content:
            application/json:
              example:
                - name: "Apu"
                  age: 3
                  picture: "ASCII monkey"
                  species: "Monkey"
                  environment: "Rainforest"

                - name: "Tinky"
                  age: 5
                  picture: "ASCII dog"
                  species: "Dog"
                  environment: "House"
    post:
      description: Create a new animal
      requestBody:
        description: JSON document that contains data for new animal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Animal'
            example:
              name: "Tinky"
              age: 5
              picture: "ASCII dog"
              species: "dog"
              environment: "House"
      responses:
        '201':
          description: The animal was created successfully
          headers:
            Location: 
              description: URI of the new animal
              schema: 
                type: string
        '400':
          description: The request body was not valid
        '409':
          description: A animal with the same handle already exists
        '415':
          description: Wrong media type was used

  # ANIMAL ITEM
  /animals/{name}:
    get:
      description: Retrieve details of a specific animal
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the animal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Animal'
        '404':
          description: Animal not found
    put:
      description: Update an existing animal
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: JSON document that contains updated data for the animal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Animal'
      responses:
        '204':
          description: Animal updated successfully
        '400':
          description: Cannot change primary key
        '409':
          description: Animal with the new name already exists
        '415':
          description: Unsupported media type
    delete:
      description: Delete an animal from the database
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Animal deleted successfully
        '404':
          description: Animal not found      
